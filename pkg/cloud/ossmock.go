// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/cloud/ossinterface.go

package cloud

import (
	context "context"
	reflect "reflect"

	oss "github.com/aliyun/alibabacloud-oss-go-sdk-v2/oss"
	gomock "github.com/golang/mock/gomock"
)

// MockOSSInterface is a mock of OSSInterface interface.
type MockOSSInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOSSInterfaceMockRecorder
}

// MockOSSInterfaceMockRecorder is the mock recorder for MockOSSInterface.
type MockOSSInterfaceMockRecorder struct {
	mock *MockOSSInterface
}

// NewMockOSSInterface creates a new mock instance.
func NewMockOSSInterface(ctrl *gomock.Controller) *MockOSSInterface {
	mock := &MockOSSInterface{ctrl: ctrl}
	mock.recorder = &MockOSSInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOSSInterface) EXPECT() *MockOSSInterfaceMockRecorder {
	return m.recorder
}

// GetBucketInfo mocks base method.
func (m *MockOSSInterface) GetBucketInfo(arg0 context.Context, arg1 *oss.GetBucketInfoRequest, arg2 ...func(*oss.Options)) (*oss.GetBucketInfoResult, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetBucketInfo", varargs...)
	ret0, _ := ret[0].(*oss.GetBucketInfoResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBucketInfo indicates an expected call of GetBucketInfo.
func (mr *MockOSSInterfaceMockRecorder) GetBucketInfo(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBucketInfo", reflect.TypeOf((*MockOSSInterface)(nil).GetBucketInfo), varargs...)
}
