// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: lvm.proto

package lib

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogicalVolume_Attributes_Type int32

const (
	LogicalVolume_Attributes_MALFORMED_TYPE               LogicalVolume_Attributes_Type = 0
	LogicalVolume_Attributes_MIRRORED                     LogicalVolume_Attributes_Type = 1
	LogicalVolume_Attributes_MIRRORED_WITHOUT_SYNC        LogicalVolume_Attributes_Type = 2
	LogicalVolume_Attributes_ORIGIN                       LogicalVolume_Attributes_Type = 3
	LogicalVolume_Attributes_ORIGIN_WITH_MERGING_SNAPSHOT LogicalVolume_Attributes_Type = 4
	LogicalVolume_Attributes_RAID                         LogicalVolume_Attributes_Type = 5
	LogicalVolume_Attributes_RAID_WITHOUT_SYNC            LogicalVolume_Attributes_Type = 6
	LogicalVolume_Attributes_SNAPSHOT                     LogicalVolume_Attributes_Type = 7
	LogicalVolume_Attributes_MERGING_SNAPSHOT             LogicalVolume_Attributes_Type = 8
	LogicalVolume_Attributes_PV_MOVE                      LogicalVolume_Attributes_Type = 9
	LogicalVolume_Attributes_VIRTUAL_MIRROR               LogicalVolume_Attributes_Type = 10
	LogicalVolume_Attributes_VIRTUAL_RAID_IMAGE           LogicalVolume_Attributes_Type = 11
	LogicalVolume_Attributes_RAID_IMAGE_OUT_OF_SYNC       LogicalVolume_Attributes_Type = 12
	LogicalVolume_Attributes_MIRROR_LOG                   LogicalVolume_Attributes_Type = 13
	LogicalVolume_Attributes_UNDER_CONVERSION             LogicalVolume_Attributes_Type = 14
	LogicalVolume_Attributes_THIN                         LogicalVolume_Attributes_Type = 15
	LogicalVolume_Attributes_THIN_POOL                    LogicalVolume_Attributes_Type = 16
	LogicalVolume_Attributes_THIN_POOL_DATA               LogicalVolume_Attributes_Type = 17
	LogicalVolume_Attributes_RAID_OR_THIN_POOL_METADATA   LogicalVolume_Attributes_Type = 18
)

// Enum value maps for LogicalVolume_Attributes_Type.
var (
	LogicalVolume_Attributes_Type_name = map[int32]string{
		0:  "MALFORMED_TYPE",
		1:  "MIRRORED",
		2:  "MIRRORED_WITHOUT_SYNC",
		3:  "ORIGIN",
		4:  "ORIGIN_WITH_MERGING_SNAPSHOT",
		5:  "RAID",
		6:  "RAID_WITHOUT_SYNC",
		7:  "SNAPSHOT",
		8:  "MERGING_SNAPSHOT",
		9:  "PV_MOVE",
		10: "VIRTUAL_MIRROR",
		11: "VIRTUAL_RAID_IMAGE",
		12: "RAID_IMAGE_OUT_OF_SYNC",
		13: "MIRROR_LOG",
		14: "UNDER_CONVERSION",
		15: "THIN",
		16: "THIN_POOL",
		17: "THIN_POOL_DATA",
		18: "RAID_OR_THIN_POOL_METADATA",
	}
	LogicalVolume_Attributes_Type_value = map[string]int32{
		"MALFORMED_TYPE":               0,
		"MIRRORED":                     1,
		"MIRRORED_WITHOUT_SYNC":        2,
		"ORIGIN":                       3,
		"ORIGIN_WITH_MERGING_SNAPSHOT": 4,
		"RAID":                         5,
		"RAID_WITHOUT_SYNC":            6,
		"SNAPSHOT":                     7,
		"MERGING_SNAPSHOT":             8,
		"PV_MOVE":                      9,
		"VIRTUAL_MIRROR":               10,
		"VIRTUAL_RAID_IMAGE":           11,
		"RAID_IMAGE_OUT_OF_SYNC":       12,
		"MIRROR_LOG":                   13,
		"UNDER_CONVERSION":             14,
		"THIN":                         15,
		"THIN_POOL":                    16,
		"THIN_POOL_DATA":               17,
		"RAID_OR_THIN_POOL_METADATA":   18,
	}
)

func (x LogicalVolume_Attributes_Type) Enum() *LogicalVolume_Attributes_Type {
	p := new(LogicalVolume_Attributes_Type)
	*p = x
	return p
}

func (x LogicalVolume_Attributes_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicalVolume_Attributes_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_lvm_proto_enumTypes[0].Descriptor()
}

func (LogicalVolume_Attributes_Type) Type() protoreflect.EnumType {
	return &file_lvm_proto_enumTypes[0]
}

func (x LogicalVolume_Attributes_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicalVolume_Attributes_Type.Descriptor instead.
func (LogicalVolume_Attributes_Type) EnumDescriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{0, 0, 0}
}

type LogicalVolume_Attributes_Permissions int32

const (
	LogicalVolume_Attributes_MALFORMED_PERMISSIONS LogicalVolume_Attributes_Permissions = 0
	LogicalVolume_Attributes_WRITEABLE             LogicalVolume_Attributes_Permissions = 1
	LogicalVolume_Attributes_READ_ONLY             LogicalVolume_Attributes_Permissions = 2
	LogicalVolume_Attributes_READ_ONLY_ACTIVATION  LogicalVolume_Attributes_Permissions = 3
)

// Enum value maps for LogicalVolume_Attributes_Permissions.
var (
	LogicalVolume_Attributes_Permissions_name = map[int32]string{
		0: "MALFORMED_PERMISSIONS",
		1: "WRITEABLE",
		2: "READ_ONLY",
		3: "READ_ONLY_ACTIVATION",
	}
	LogicalVolume_Attributes_Permissions_value = map[string]int32{
		"MALFORMED_PERMISSIONS": 0,
		"WRITEABLE":             1,
		"READ_ONLY":             2,
		"READ_ONLY_ACTIVATION":  3,
	}
)

func (x LogicalVolume_Attributes_Permissions) Enum() *LogicalVolume_Attributes_Permissions {
	p := new(LogicalVolume_Attributes_Permissions)
	*p = x
	return p
}

func (x LogicalVolume_Attributes_Permissions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicalVolume_Attributes_Permissions) Descriptor() protoreflect.EnumDescriptor {
	return file_lvm_proto_enumTypes[1].Descriptor()
}

func (LogicalVolume_Attributes_Permissions) Type() protoreflect.EnumType {
	return &file_lvm_proto_enumTypes[1]
}

func (x LogicalVolume_Attributes_Permissions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicalVolume_Attributes_Permissions.Descriptor instead.
func (LogicalVolume_Attributes_Permissions) EnumDescriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{0, 0, 1}
}

type LogicalVolume_Attributes_Allocation int32

const (
	LogicalVolume_Attributes_MALFORMED_ALLOCATION LogicalVolume_Attributes_Allocation = 0
	LogicalVolume_Attributes_ANYWHERE             LogicalVolume_Attributes_Allocation = 1
	LogicalVolume_Attributes_CONTIGUOUS           LogicalVolume_Attributes_Allocation = 2
	LogicalVolume_Attributes_INHERITED            LogicalVolume_Attributes_Allocation = 3
	LogicalVolume_Attributes_CLING                LogicalVolume_Attributes_Allocation = 4
	LogicalVolume_Attributes_NORMAL               LogicalVolume_Attributes_Allocation = 5
	LogicalVolume_Attributes_ANYWHERE_LOCKED      LogicalVolume_Attributes_Allocation = 6
	LogicalVolume_Attributes_CONTIGUOUS_LOCKED    LogicalVolume_Attributes_Allocation = 7
	LogicalVolume_Attributes_INHERITED_LOCKED     LogicalVolume_Attributes_Allocation = 8
	LogicalVolume_Attributes_CLING_LOCKED         LogicalVolume_Attributes_Allocation = 9
	LogicalVolume_Attributes_NORMAL_LOCKED        LogicalVolume_Attributes_Allocation = 10
)

// Enum value maps for LogicalVolume_Attributes_Allocation.
var (
	LogicalVolume_Attributes_Allocation_name = map[int32]string{
		0:  "MALFORMED_ALLOCATION",
		1:  "ANYWHERE",
		2:  "CONTIGUOUS",
		3:  "INHERITED",
		4:  "CLING",
		5:  "NORMAL",
		6:  "ANYWHERE_LOCKED",
		7:  "CONTIGUOUS_LOCKED",
		8:  "INHERITED_LOCKED",
		9:  "CLING_LOCKED",
		10: "NORMAL_LOCKED",
	}
	LogicalVolume_Attributes_Allocation_value = map[string]int32{
		"MALFORMED_ALLOCATION": 0,
		"ANYWHERE":             1,
		"CONTIGUOUS":           2,
		"INHERITED":            3,
		"CLING":                4,
		"NORMAL":               5,
		"ANYWHERE_LOCKED":      6,
		"CONTIGUOUS_LOCKED":    7,
		"INHERITED_LOCKED":     8,
		"CLING_LOCKED":         9,
		"NORMAL_LOCKED":        10,
	}
)

func (x LogicalVolume_Attributes_Allocation) Enum() *LogicalVolume_Attributes_Allocation {
	p := new(LogicalVolume_Attributes_Allocation)
	*p = x
	return p
}

func (x LogicalVolume_Attributes_Allocation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicalVolume_Attributes_Allocation) Descriptor() protoreflect.EnumDescriptor {
	return file_lvm_proto_enumTypes[2].Descriptor()
}

func (LogicalVolume_Attributes_Allocation) Type() protoreflect.EnumType {
	return &file_lvm_proto_enumTypes[2]
}

func (x LogicalVolume_Attributes_Allocation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicalVolume_Attributes_Allocation.Descriptor instead.
func (LogicalVolume_Attributes_Allocation) EnumDescriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{0, 0, 2}
}

type LogicalVolume_Attributes_State int32

const (
	LogicalVolume_Attributes_MALFORMED_STATE                           LogicalVolume_Attributes_State = 0
	LogicalVolume_Attributes_ACTIVE                                    LogicalVolume_Attributes_State = 1
	LogicalVolume_Attributes_SUSPENDED                                 LogicalVolume_Attributes_State = 2
	LogicalVolume_Attributes_INVALID_SNAPSHOT                          LogicalVolume_Attributes_State = 3
	LogicalVolume_Attributes_INVALID_SUSPENDED_SNAPSHOT                LogicalVolume_Attributes_State = 4
	LogicalVolume_Attributes_SNAPSHOT_MERGE_FAILED                     LogicalVolume_Attributes_State = 5
	LogicalVolume_Attributes_SUSPENDED_SNAPSHOT_MERGE_FAILED           LogicalVolume_Attributes_State = 6
	LogicalVolume_Attributes_MAPPED_DEVICE_PRESENT_WITHOUT_TABLES      LogicalVolume_Attributes_State = 7
	LogicalVolume_Attributes_MAPPED_DEVICE_PRESENT_WITH_INACTIVE_TABLE LogicalVolume_Attributes_State = 8
)

// Enum value maps for LogicalVolume_Attributes_State.
var (
	LogicalVolume_Attributes_State_name = map[int32]string{
		0: "MALFORMED_STATE",
		1: "ACTIVE",
		2: "SUSPENDED",
		3: "INVALID_SNAPSHOT",
		4: "INVALID_SUSPENDED_SNAPSHOT",
		5: "SNAPSHOT_MERGE_FAILED",
		6: "SUSPENDED_SNAPSHOT_MERGE_FAILED",
		7: "MAPPED_DEVICE_PRESENT_WITHOUT_TABLES",
		8: "MAPPED_DEVICE_PRESENT_WITH_INACTIVE_TABLE",
	}
	LogicalVolume_Attributes_State_value = map[string]int32{
		"MALFORMED_STATE":                           0,
		"ACTIVE":                                    1,
		"SUSPENDED":                                 2,
		"INVALID_SNAPSHOT":                          3,
		"INVALID_SUSPENDED_SNAPSHOT":                4,
		"SNAPSHOT_MERGE_FAILED":                     5,
		"SUSPENDED_SNAPSHOT_MERGE_FAILED":           6,
		"MAPPED_DEVICE_PRESENT_WITHOUT_TABLES":      7,
		"MAPPED_DEVICE_PRESENT_WITH_INACTIVE_TABLE": 8,
	}
)

func (x LogicalVolume_Attributes_State) Enum() *LogicalVolume_Attributes_State {
	p := new(LogicalVolume_Attributes_State)
	*p = x
	return p
}

func (x LogicalVolume_Attributes_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicalVolume_Attributes_State) Descriptor() protoreflect.EnumDescriptor {
	return file_lvm_proto_enumTypes[3].Descriptor()
}

func (LogicalVolume_Attributes_State) Type() protoreflect.EnumType {
	return &file_lvm_proto_enumTypes[3]
}

func (x LogicalVolume_Attributes_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicalVolume_Attributes_State.Descriptor instead.
func (LogicalVolume_Attributes_State) EnumDescriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{0, 0, 3}
}

type LogicalVolume_Attributes_TargetType int32

const (
	LogicalVolume_Attributes_MALFORMED_TARGET LogicalVolume_Attributes_TargetType = 0
	LogicalVolume_Attributes_MIRROR_TARGET    LogicalVolume_Attributes_TargetType = 1
	LogicalVolume_Attributes_RAID_TARGET      LogicalVolume_Attributes_TargetType = 2
	LogicalVolume_Attributes_SNAPSHOT_TARGET  LogicalVolume_Attributes_TargetType = 3
	LogicalVolume_Attributes_THIN_TARGET      LogicalVolume_Attributes_TargetType = 4
	LogicalVolume_Attributes_UNKNOWN_TARGET   LogicalVolume_Attributes_TargetType = 5
	LogicalVolume_Attributes_VIRTUAL_TARGET   LogicalVolume_Attributes_TargetType = 6
)

// Enum value maps for LogicalVolume_Attributes_TargetType.
var (
	LogicalVolume_Attributes_TargetType_name = map[int32]string{
		0: "MALFORMED_TARGET",
		1: "MIRROR_TARGET",
		2: "RAID_TARGET",
		3: "SNAPSHOT_TARGET",
		4: "THIN_TARGET",
		5: "UNKNOWN_TARGET",
		6: "VIRTUAL_TARGET",
	}
	LogicalVolume_Attributes_TargetType_value = map[string]int32{
		"MALFORMED_TARGET": 0,
		"MIRROR_TARGET":    1,
		"RAID_TARGET":      2,
		"SNAPSHOT_TARGET":  3,
		"THIN_TARGET":      4,
		"UNKNOWN_TARGET":   5,
		"VIRTUAL_TARGET":   6,
	}
)

func (x LogicalVolume_Attributes_TargetType) Enum() *LogicalVolume_Attributes_TargetType {
	p := new(LogicalVolume_Attributes_TargetType)
	*p = x
	return p
}

func (x LogicalVolume_Attributes_TargetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicalVolume_Attributes_TargetType) Descriptor() protoreflect.EnumDescriptor {
	return file_lvm_proto_enumTypes[4].Descriptor()
}

func (LogicalVolume_Attributes_TargetType) Type() protoreflect.EnumType {
	return &file_lvm_proto_enumTypes[4]
}

func (x LogicalVolume_Attributes_TargetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicalVolume_Attributes_TargetType.Descriptor instead.
func (LogicalVolume_Attributes_TargetType) EnumDescriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{0, 0, 4}
}

type LogicalVolume_Attributes_Health int32

const (
	LogicalVolume_Attributes_MALFORMED_HEALTH LogicalVolume_Attributes_Health = 0
	LogicalVolume_Attributes_OK               LogicalVolume_Attributes_Health = 1
	LogicalVolume_Attributes_PARTIAL          LogicalVolume_Attributes_Health = 2
	LogicalVolume_Attributes_REFRESH_NEEDED   LogicalVolume_Attributes_Health = 3
	LogicalVolume_Attributes_MISMATCHES_EXIST LogicalVolume_Attributes_Health = 4
	LogicalVolume_Attributes_WRITEMOSTLY      LogicalVolume_Attributes_Health = 5
)

// Enum value maps for LogicalVolume_Attributes_Health.
var (
	LogicalVolume_Attributes_Health_name = map[int32]string{
		0: "MALFORMED_HEALTH",
		1: "OK",
		2: "PARTIAL",
		3: "REFRESH_NEEDED",
		4: "MISMATCHES_EXIST",
		5: "WRITEMOSTLY",
	}
	LogicalVolume_Attributes_Health_value = map[string]int32{
		"MALFORMED_HEALTH": 0,
		"OK":               1,
		"PARTIAL":          2,
		"REFRESH_NEEDED":   3,
		"MISMATCHES_EXIST": 4,
		"WRITEMOSTLY":      5,
	}
)

func (x LogicalVolume_Attributes_Health) Enum() *LogicalVolume_Attributes_Health {
	p := new(LogicalVolume_Attributes_Health)
	*p = x
	return p
}

func (x LogicalVolume_Attributes_Health) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogicalVolume_Attributes_Health) Descriptor() protoreflect.EnumDescriptor {
	return file_lvm_proto_enumTypes[5].Descriptor()
}

func (LogicalVolume_Attributes_Health) Type() protoreflect.EnumType {
	return &file_lvm_proto_enumTypes[5]
}

func (x LogicalVolume_Attributes_Health) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogicalVolume_Attributes_Health.Descriptor instead.
func (LogicalVolume_Attributes_Health) EnumDescriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{0, 0, 5}
}

type LogicalVolume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size                 uint64                    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Uuid                 string                    `protobuf:"bytes,3,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Attributes           *LogicalVolume_Attributes `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes,omitempty"`
	CopyPercent          string                    `protobuf:"bytes,5,opt,name=copy_percent,json=copyPercent,proto3" json:"copy_percent,omitempty"`
	ActualDevMajorNumber uint32                    `protobuf:"varint,6,opt,name=actual_dev_major_number,json=actualDevMajorNumber,proto3" json:"actual_dev_major_number,omitempty"`
	ActualDevMinorNumber uint32                    `protobuf:"varint,7,opt,name=actual_dev_minor_number,json=actualDevMinorNumber,proto3" json:"actual_dev_minor_number,omitempty"`
	Tags                 []string                  `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *LogicalVolume) Reset() {
	*x = LogicalVolume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogicalVolume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogicalVolume) ProtoMessage() {}

func (x *LogicalVolume) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogicalVolume.ProtoReflect.Descriptor instead.
func (*LogicalVolume) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{0}
}

func (x *LogicalVolume) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogicalVolume) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *LogicalVolume) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *LogicalVolume) GetAttributes() *LogicalVolume_Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *LogicalVolume) GetCopyPercent() string {
	if x != nil {
		return x.CopyPercent
	}
	return ""
}

func (x *LogicalVolume) GetActualDevMajorNumber() uint32 {
	if x != nil {
		return x.ActualDevMajorNumber
	}
	return 0
}

func (x *LogicalVolume) GetActualDevMinorNumber() uint32 {
	if x != nil {
		return x.ActualDevMinorNumber
	}
	return 0
}

func (x *LogicalVolume) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type VolumeGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size     uint64   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	FreeSize uint64   `protobuf:"varint,3,opt,name=free_size,json=freeSize,proto3" json:"free_size,omitempty"`
	Uuid     string   `protobuf:"bytes,4,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Tags     []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	PvCount  uint64   `protobuf:"varint,6,opt,name=pv_count,json=pvCount,proto3" json:"pv_count,omitempty"`
}

func (x *VolumeGroup) Reset() {
	*x = VolumeGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeGroup) ProtoMessage() {}

func (x *VolumeGroup) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeGroup.ProtoReflect.Descriptor instead.
func (*VolumeGroup) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{1}
}

func (x *VolumeGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VolumeGroup) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *VolumeGroup) GetFreeSize() uint64 {
	if x != nil {
		return x.FreeSize
	}
	return 0
}

func (x *VolumeGroup) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *VolumeGroup) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *VolumeGroup) GetPvCount() uint64 {
	if x != nil {
		return x.PvCount
	}
	return 0
}

type ListLVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeGroup string `protobuf:"bytes,1,opt,name=volume_group,json=volumeGroup,proto3" json:"volume_group,omitempty"`
}

func (x *ListLVRequest) Reset() {
	*x = ListLVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLVRequest) ProtoMessage() {}

func (x *ListLVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLVRequest.ProtoReflect.Descriptor instead.
func (*ListLVRequest) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{2}
}

func (x *ListLVRequest) GetVolumeGroup() string {
	if x != nil {
		return x.VolumeGroup
	}
	return ""
}

type ListLVReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volumes []*LogicalVolume `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
}

func (x *ListLVReply) Reset() {
	*x = ListLVReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLVReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLVReply) ProtoMessage() {}

func (x *ListLVReply) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLVReply.ProtoReflect.Descriptor instead.
func (*ListLVReply) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{3}
}

func (x *ListLVReply) GetVolumes() []*LogicalVolume {
	if x != nil {
		return x.Volumes
	}
	return nil
}

type CreateLVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeGroup string   `protobuf:"bytes,1,opt,name=volume_group,json=volumeGroup,proto3" json:"volume_group,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size        uint64   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Mirrors     uint32   `protobuf:"varint,4,opt,name=mirrors,proto3" json:"mirrors,omitempty"`
	Tags        []string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`
	Striping    bool     `protobuf:"varint,6,opt,name=striping,proto3" json:"striping,omitempty"`
}

func (x *CreateLVRequest) Reset() {
	*x = CreateLVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLVRequest) ProtoMessage() {}

func (x *CreateLVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLVRequest.ProtoReflect.Descriptor instead.
func (*CreateLVRequest) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{4}
}

func (x *CreateLVRequest) GetVolumeGroup() string {
	if x != nil {
		return x.VolumeGroup
	}
	return ""
}

func (x *CreateLVRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLVRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CreateLVRequest) GetMirrors() uint32 {
	if x != nil {
		return x.Mirrors
	}
	return 0
}

func (x *CreateLVRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateLVRequest) GetStriping() bool {
	if x != nil {
		return x.Striping
	}
	return false
}

type CreateLVReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandOutput string `protobuf:"bytes,1,opt,name=command_output,json=commandOutput,proto3" json:"command_output,omitempty"`
}

func (x *CreateLVReply) Reset() {
	*x = CreateLVReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLVReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLVReply) ProtoMessage() {}

func (x *CreateLVReply) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLVReply.ProtoReflect.Descriptor instead.
func (*CreateLVReply) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{5}
}

func (x *CreateLVReply) GetCommandOutput() string {
	if x != nil {
		return x.CommandOutput
	}
	return ""
}

type RemoveLVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeGroup string `protobuf:"bytes,1,opt,name=volume_group,json=volumeGroup,proto3" json:"volume_group,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RemoveLVRequest) Reset() {
	*x = RemoveLVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLVRequest) ProtoMessage() {}

func (x *RemoveLVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLVRequest.ProtoReflect.Descriptor instead.
func (*RemoveLVRequest) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveLVRequest) GetVolumeGroup() string {
	if x != nil {
		return x.VolumeGroup
	}
	return ""
}

func (x *RemoveLVRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RemoveLVReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandOutput string `protobuf:"bytes,1,opt,name=command_output,json=commandOutput,proto3" json:"command_output,omitempty"`
}

func (x *RemoveLVReply) Reset() {
	*x = RemoveLVReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveLVReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLVReply) ProtoMessage() {}

func (x *RemoveLVReply) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLVReply.ProtoReflect.Descriptor instead.
func (*RemoveLVReply) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveLVReply) GetCommandOutput() string {
	if x != nil {
		return x.CommandOutput
	}
	return ""
}

type CloneLVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceName string `protobuf:"bytes,1,opt,name=source_name,json=sourceName,proto3" json:"source_name,omitempty"`
	DestName   string `protobuf:"bytes,2,opt,name=dest_name,json=destName,proto3" json:"dest_name,omitempty"`
}

func (x *CloneLVRequest) Reset() {
	*x = CloneLVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneLVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneLVRequest) ProtoMessage() {}

func (x *CloneLVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneLVRequest.ProtoReflect.Descriptor instead.
func (*CloneLVRequest) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{8}
}

func (x *CloneLVRequest) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *CloneLVRequest) GetDestName() string {
	if x != nil {
		return x.DestName
	}
	return ""
}

type CloneLVReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandOutput string `protobuf:"bytes,1,opt,name=command_output,json=commandOutput,proto3" json:"command_output,omitempty"`
}

func (x *CloneLVReply) Reset() {
	*x = CloneLVReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloneLVReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneLVReply) ProtoMessage() {}

func (x *CloneLVReply) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneLVReply.ProtoReflect.Descriptor instead.
func (*CloneLVReply) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{9}
}

func (x *CloneLVReply) GetCommandOutput() string {
	if x != nil {
		return x.CommandOutput
	}
	return ""
}

type ListVGRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListVGRequest) Reset() {
	*x = ListVGRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVGRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVGRequest) ProtoMessage() {}

func (x *ListVGRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVGRequest.ProtoReflect.Descriptor instead.
func (*ListVGRequest) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{10}
}

type ListVGReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeGroups []*VolumeGroup `protobuf:"bytes,1,rep,name=volume_groups,json=volumeGroups,proto3" json:"volume_groups,omitempty"`
}

func (x *ListVGReply) Reset() {
	*x = ListVGReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVGReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVGReply) ProtoMessage() {}

func (x *ListVGReply) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVGReply.ProtoReflect.Descriptor instead.
func (*ListVGReply) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{11}
}

func (x *ListVGReply) GetVolumeGroups() []*VolumeGroup {
	if x != nil {
		return x.VolumeGroups
	}
	return nil
}

type CreateVGRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PhysicalVolume string   `protobuf:"bytes,2,opt,name=physical_volume,json=physicalVolume,proto3" json:"physical_volume,omitempty"`
	Tags           []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *CreateVGRequest) Reset() {
	*x = CreateVGRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVGRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVGRequest) ProtoMessage() {}

func (x *CreateVGRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVGRequest.ProtoReflect.Descriptor instead.
func (*CreateVGRequest) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{12}
}

func (x *CreateVGRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVGRequest) GetPhysicalVolume() string {
	if x != nil {
		return x.PhysicalVolume
	}
	return ""
}

func (x *CreateVGRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CreateVGReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandOutput string `protobuf:"bytes,1,opt,name=command_output,json=commandOutput,proto3" json:"command_output,omitempty"`
}

func (x *CreateVGReply) Reset() {
	*x = CreateVGReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVGReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVGReply) ProtoMessage() {}

func (x *CreateVGReply) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVGReply.ProtoReflect.Descriptor instead.
func (*CreateVGReply) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{13}
}

func (x *CreateVGReply) GetCommandOutput() string {
	if x != nil {
		return x.CommandOutput
	}
	return ""
}

type RemoveVGRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RemoveVGRequest) Reset() {
	*x = RemoveVGRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveVGRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveVGRequest) ProtoMessage() {}

func (x *RemoveVGRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveVGRequest.ProtoReflect.Descriptor instead.
func (*RemoveVGRequest) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveVGRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RemoveVGReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandOutput string `protobuf:"bytes,1,opt,name=command_output,json=commandOutput,proto3" json:"command_output,omitempty"`
}

func (x *RemoveVGReply) Reset() {
	*x = RemoveVGReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveVGReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveVGReply) ProtoMessage() {}

func (x *RemoveVGReply) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveVGReply.ProtoReflect.Descriptor instead.
func (*RemoveVGReply) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{15}
}

func (x *RemoveVGReply) GetCommandOutput() string {
	if x != nil {
		return x.CommandOutput
	}
	return ""
}

type AddTagLVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeGroup string   `protobuf:"bytes,1,opt,name=volume_group,json=volumeGroup,proto3" json:"volume_group,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags        []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *AddTagLVRequest) Reset() {
	*x = AddTagLVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagLVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagLVRequest) ProtoMessage() {}

func (x *AddTagLVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagLVRequest.ProtoReflect.Descriptor instead.
func (*AddTagLVRequest) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{16}
}

func (x *AddTagLVRequest) GetVolumeGroup() string {
	if x != nil {
		return x.VolumeGroup
	}
	return ""
}

func (x *AddTagLVRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddTagLVRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type AddTagLVReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandOutput string `protobuf:"bytes,1,opt,name=command_output,json=commandOutput,proto3" json:"command_output,omitempty"`
}

func (x *AddTagLVReply) Reset() {
	*x = AddTagLVReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagLVReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagLVReply) ProtoMessage() {}

func (x *AddTagLVReply) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagLVReply.ProtoReflect.Descriptor instead.
func (*AddTagLVReply) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{17}
}

func (x *AddTagLVReply) GetCommandOutput() string {
	if x != nil {
		return x.CommandOutput
	}
	return ""
}

type RemoveTagLVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolumeGroup string   `protobuf:"bytes,1,opt,name=volume_group,json=volumeGroup,proto3" json:"volume_group,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Tags        []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *RemoveTagLVRequest) Reset() {
	*x = RemoveTagLVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTagLVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTagLVRequest) ProtoMessage() {}

func (x *RemoveTagLVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTagLVRequest.ProtoReflect.Descriptor instead.
func (*RemoveTagLVRequest) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveTagLVRequest) GetVolumeGroup() string {
	if x != nil {
		return x.VolumeGroup
	}
	return ""
}

func (x *RemoveTagLVRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RemoveTagLVRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type RemoveTagLVReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandOutput string `protobuf:"bytes,1,opt,name=command_output,json=commandOutput,proto3" json:"command_output,omitempty"`
}

func (x *RemoveTagLVReply) Reset() {
	*x = RemoveTagLVReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTagLVReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTagLVReply) ProtoMessage() {}

func (x *RemoveTagLVReply) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTagLVReply.ProtoReflect.Descriptor instead.
func (*RemoveTagLVReply) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveTagLVReply) GetCommandOutput() string {
	if x != nil {
		return x.CommandOutput
	}
	return ""
}

type CleanPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *CleanPathRequest) Reset() {
	*x = CleanPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanPathRequest) ProtoMessage() {}

func (x *CleanPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanPathRequest.ProtoReflect.Descriptor instead.
func (*CleanPathRequest) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{20}
}

func (x *CleanPathRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type CleanPathReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandOutput string `protobuf:"bytes,1,opt,name=command_output,json=commandOutput,proto3" json:"command_output,omitempty"`
}

func (x *CleanPathReply) Reset() {
	*x = CleanPathReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CleanPathReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanPathReply) ProtoMessage() {}

func (x *CleanPathReply) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanPathReply.ProtoReflect.Descriptor instead.
func (*CleanPathReply) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{21}
}

func (x *CleanPathReply) GetCommandOutput() string {
	if x != nil {
		return x.CommandOutput
	}
	return ""
}

type ListNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameSpace string `protobuf:"bytes,1,opt,name=name_space,json=nameSpace,proto3" json:"name_space,omitempty"`
	Region    string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *ListNamespaceRequest) Reset() {
	*x = ListNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceRequest) ProtoMessage() {}

func (x *ListNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceRequest.ProtoReflect.Descriptor instead.
func (*ListNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{22}
}

func (x *ListNamespaceRequest) GetNameSpace() string {
	if x != nil {
		return x.NameSpace
	}
	return ""
}

func (x *ListNamespaceRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type NameSpace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dev        string `protobuf:"bytes,1,opt,name=dev,proto3" json:"dev,omitempty"`
	Mode       string `protobuf:"bytes,2,opt,name=mode,proto3" json:"mode,omitempty"`
	MapType    string `protobuf:"bytes,3,opt,name=map_type,json=mapType,proto3" json:"map_type,omitempty"`
	Size       int64  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Uuid       string `protobuf:"bytes,5,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SectorSize int64  `protobuf:"varint,6,opt,name=sector_size,json=sectorSize,proto3" json:"sector_size,omitempty"`
	Align      int64  `protobuf:"varint,7,opt,name=align,proto3" json:"align,omitempty"`
	BlockDev   string `protobuf:"bytes,8,opt,name=block_dev,json=blockDev,proto3" json:"block_dev,omitempty"`
	CharDev    string `protobuf:"bytes,9,opt,name=char_dev,json=charDev,proto3" json:"char_dev,omitempty"`
	Name       string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Region     string `protobuf:"bytes,11,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *NameSpace) Reset() {
	*x = NameSpace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameSpace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameSpace) ProtoMessage() {}

func (x *NameSpace) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameSpace.ProtoReflect.Descriptor instead.
func (*NameSpace) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{23}
}

func (x *NameSpace) GetDev() string {
	if x != nil {
		return x.Dev
	}
	return ""
}

func (x *NameSpace) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *NameSpace) GetMapType() string {
	if x != nil {
		return x.MapType
	}
	return ""
}

func (x *NameSpace) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *NameSpace) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *NameSpace) GetSectorSize() int64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

func (x *NameSpace) GetAlign() int64 {
	if x != nil {
		return x.Align
	}
	return 0
}

func (x *NameSpace) GetBlockDev() string {
	if x != nil {
		return x.BlockDev
	}
	return ""
}

func (x *NameSpace) GetCharDev() string {
	if x != nil {
		return x.CharDev
	}
	return ""
}

func (x *NameSpace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NameSpace) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type ListNamespaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameSpace []*NameSpace `protobuf:"bytes,1,rep,name=name_space,json=nameSpace,proto3" json:"name_space,omitempty"`
}

func (x *ListNamespaceReply) Reset() {
	*x = ListNamespaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNamespaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespaceReply) ProtoMessage() {}

func (x *ListNamespaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespaceReply.ProtoReflect.Descriptor instead.
func (*ListNamespaceReply) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{24}
}

func (x *ListNamespaceReply) GetNameSpace() []*NameSpace {
	if x != nil {
		return x.NameSpace
	}
	return nil
}

type CreateNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Size   uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *CreateNamespaceRequest) Reset() {
	*x = CreateNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceRequest) ProtoMessage() {}

func (x *CreateNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceRequest.ProtoReflect.Descriptor instead.
func (*CreateNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{25}
}

func (x *CreateNamespaceRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CreateNamespaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNamespaceRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type CreateNamespaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandOutput string `protobuf:"bytes,1,opt,name=command_output,json=commandOutput,proto3" json:"command_output,omitempty"`
}

func (x *CreateNamespaceReply) Reset() {
	*x = CreateNamespaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNamespaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceReply) ProtoMessage() {}

func (x *CreateNamespaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceReply.ProtoReflect.Descriptor instead.
func (*CreateNamespaceReply) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{26}
}

func (x *CreateNamespaceReply) GetCommandOutput() string {
	if x != nil {
		return x.CommandOutput
	}
	return ""
}

type RemoveNamespaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameSpace string `protobuf:"bytes,1,opt,name=name_space,json=nameSpace,proto3" json:"name_space,omitempty"`
}

func (x *RemoveNamespaceRequest) Reset() {
	*x = RemoveNamespaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNamespaceRequest) ProtoMessage() {}

func (x *RemoveNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNamespaceRequest.ProtoReflect.Descriptor instead.
func (*RemoveNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{27}
}

func (x *RemoveNamespaceRequest) GetNameSpace() string {
	if x != nil {
		return x.NameSpace
	}
	return ""
}

type RemoveNamespaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandOutput string `protobuf:"bytes,1,opt,name=command_output,json=commandOutput,proto3" json:"command_output,omitempty"`
}

func (x *RemoveNamespaceReply) Reset() {
	*x = RemoveNamespaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNamespaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNamespaceReply) ProtoMessage() {}

func (x *RemoveNamespaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNamespaceReply.ProtoReflect.Descriptor instead.
func (*RemoveNamespaceReply) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{28}
}

func (x *RemoveNamespaceReply) GetCommandOutput() string {
	if x != nil {
		return x.CommandOutput
	}
	return ""
}

type LogicalVolume_Attributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type              LogicalVolume_Attributes_Type        `protobuf:"varint,1,opt,name=type,proto3,enum=proto.LogicalVolume_Attributes_Type" json:"type,omitempty"`
	Permissions       LogicalVolume_Attributes_Permissions `protobuf:"varint,2,opt,name=permissions,proto3,enum=proto.LogicalVolume_Attributes_Permissions" json:"permissions,omitempty"`
	Allocation        LogicalVolume_Attributes_Allocation  `protobuf:"varint,3,opt,name=allocation,proto3,enum=proto.LogicalVolume_Attributes_Allocation" json:"allocation,omitempty"`
	FixedMinor        bool                                 `protobuf:"varint,4,opt,name=fixed_minor,json=fixedMinor,proto3" json:"fixed_minor,omitempty"`
	State             LogicalVolume_Attributes_State       `protobuf:"varint,5,opt,name=state,proto3,enum=proto.LogicalVolume_Attributes_State" json:"state,omitempty"`
	Open              bool                                 `protobuf:"varint,6,opt,name=open,proto3" json:"open,omitempty"`
	TargetType        LogicalVolume_Attributes_TargetType  `protobuf:"varint,7,opt,name=target_type,json=targetType,proto3,enum=proto.LogicalVolume_Attributes_TargetType" json:"target_type,omitempty"`
	Zeroing           bool                                 `protobuf:"varint,8,opt,name=zeroing,proto3" json:"zeroing,omitempty"`
	Health            LogicalVolume_Attributes_Health      `protobuf:"varint,9,opt,name=health,proto3,enum=proto.LogicalVolume_Attributes_Health" json:"health,omitempty"`
	ActivationSkipped bool                                 `protobuf:"varint,10,opt,name=activation_skipped,json=activationSkipped,proto3" json:"activation_skipped,omitempty"`
}

func (x *LogicalVolume_Attributes) Reset() {
	*x = LogicalVolume_Attributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lvm_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogicalVolume_Attributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogicalVolume_Attributes) ProtoMessage() {}

func (x *LogicalVolume_Attributes) ProtoReflect() protoreflect.Message {
	mi := &file_lvm_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogicalVolume_Attributes.ProtoReflect.Descriptor instead.
func (*LogicalVolume_Attributes) Descriptor() ([]byte, []int) {
	return file_lvm_proto_rawDescGZIP(), []int{0, 0}
}

func (x *LogicalVolume_Attributes) GetType() LogicalVolume_Attributes_Type {
	if x != nil {
		return x.Type
	}
	return LogicalVolume_Attributes_MALFORMED_TYPE
}

func (x *LogicalVolume_Attributes) GetPermissions() LogicalVolume_Attributes_Permissions {
	if x != nil {
		return x.Permissions
	}
	return LogicalVolume_Attributes_MALFORMED_PERMISSIONS
}

func (x *LogicalVolume_Attributes) GetAllocation() LogicalVolume_Attributes_Allocation {
	if x != nil {
		return x.Allocation
	}
	return LogicalVolume_Attributes_MALFORMED_ALLOCATION
}

func (x *LogicalVolume_Attributes) GetFixedMinor() bool {
	if x != nil {
		return x.FixedMinor
	}
	return false
}

func (x *LogicalVolume_Attributes) GetState() LogicalVolume_Attributes_State {
	if x != nil {
		return x.State
	}
	return LogicalVolume_Attributes_MALFORMED_STATE
}

func (x *LogicalVolume_Attributes) GetOpen() bool {
	if x != nil {
		return x.Open
	}
	return false
}

func (x *LogicalVolume_Attributes) GetTargetType() LogicalVolume_Attributes_TargetType {
	if x != nil {
		return x.TargetType
	}
	return LogicalVolume_Attributes_MALFORMED_TARGET
}

func (x *LogicalVolume_Attributes) GetZeroing() bool {
	if x != nil {
		return x.Zeroing
	}
	return false
}

func (x *LogicalVolume_Attributes) GetHealth() LogicalVolume_Attributes_Health {
	if x != nil {
		return x.Health
	}
	return LogicalVolume_Attributes_MALFORMED_HEALTH
}

func (x *LogicalVolume_Attributes) GetActivationSkipped() bool {
	if x != nil {
		return x.ActivationSkipped
	}
	return false
}

var File_lvm_proto protoreflect.FileDescriptor

var file_lvm_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6c, 0x76, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xa4, 0x10, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x3f, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x70, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x70, 0x79, 0x50, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64,
	0x65, 0x76, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x76,
	0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x17, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x76, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x61, 0x63,
	0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x1a, 0xf0, 0x0d, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x4d, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4a,
	0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63,
	0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x66, 0x69, 0x78, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x4b, 0x0a, 0x0b,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x65, 0x72,
	0x6f, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x7a, 0x65, 0x72, 0x6f,
	0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x06, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6b, 0x69, 0x70, 0x70,
	0x65, 0x64, 0x22, 0xfe, 0x02, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x4d,
	0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x45, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a,
	0x15, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x45, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x4f, 0x55,
	0x54, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x52, 0x49, 0x47,
	0x49, 0x4e, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c, 0x4f, 0x52, 0x49, 0x47, 0x49, 0x4e, 0x5f, 0x57,
	0x49, 0x54, 0x48, 0x5f, 0x4d, 0x45, 0x52, 0x47, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4e, 0x41, 0x50,
	0x53, 0x48, 0x4f, 0x54, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x41, 0x49, 0x44, 0x10, 0x05,
	0x12, 0x15, 0x0a, 0x11, 0x52, 0x41, 0x49, 0x44, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x4f, 0x55, 0x54,
	0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4e, 0x41, 0x50, 0x53,
	0x48, 0x4f, 0x54, 0x10, 0x07, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x45, 0x52, 0x47, 0x49, 0x4e, 0x47,
	0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x56, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x56, 0x49, 0x52, 0x54,
	0x55, 0x41, 0x4c, 0x5f, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12,
	0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x5f, 0x52, 0x41, 0x49, 0x44, 0x5f, 0x49, 0x4d, 0x41,
	0x47, 0x45, 0x10, 0x0b, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x41, 0x49, 0x44, 0x5f, 0x49, 0x4d, 0x41,
	0x47, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x4f, 0x46, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x0c,
	0x12, 0x0e, 0x0a, 0x0a, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x0d,
	0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52,
	0x53, 0x49, 0x4f, 0x4e, 0x10, 0x0e, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x48, 0x49, 0x4e, 0x10, 0x0f,
	0x12, 0x0d, 0x0a, 0x09, 0x54, 0x48, 0x49, 0x4e, 0x5f, 0x50, 0x4f, 0x4f, 0x4c, 0x10, 0x10, 0x12,
	0x12, 0x0a, 0x0e, 0x54, 0x48, 0x49, 0x4e, 0x5f, 0x50, 0x4f, 0x4f, 0x4c, 0x5f, 0x44, 0x41, 0x54,
	0x41, 0x10, 0x11, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x41, 0x49, 0x44, 0x5f, 0x4f, 0x52, 0x5f, 0x54,
	0x48, 0x49, 0x4e, 0x5f, 0x50, 0x4f, 0x4f, 0x4c, 0x5f, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54,
	0x41, 0x10, 0x12, 0x22, 0x60, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x5f,
	0x50, 0x45, 0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x57, 0x52, 0x49, 0x54, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x52, 0x45, 0x41, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x52,
	0x45, 0x41, 0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x03, 0x22, 0xd1, 0x01, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45,
	0x44, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x4e, 0x59, 0x57, 0x48, 0x45, 0x52, 0x45, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x43, 0x4f, 0x4e, 0x54, 0x49, 0x47, 0x55, 0x4f, 0x55, 0x53, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09,
	0x49, 0x4e, 0x48, 0x45, 0x52, 0x49, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x43,
	0x4c, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c,
	0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x4e, 0x59, 0x57, 0x48, 0x45, 0x52, 0x45, 0x5f, 0x4c,
	0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x4e, 0x54, 0x49,
	0x47, 0x55, 0x4f, 0x55, 0x53, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x07, 0x12, 0x14,
	0x0a, 0x10, 0x49, 0x4e, 0x48, 0x45, 0x52, 0x49, 0x54, 0x45, 0x44, 0x5f, 0x4c, 0x4f, 0x43, 0x4b,
	0x45, 0x44, 0x10, 0x08, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x4c, 0x4f,
	0x43, 0x4b, 0x45, 0x44, 0x10, 0x09, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c,
	0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x0a, 0x22, 0x86, 0x02, 0x0a, 0x05, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53,
	0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x5f, 0x53,
	0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x4e, 0x41,
	0x50, 0x53, 0x48, 0x4f, 0x54, 0x5f, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c,
	0x45, 0x44, 0x10, 0x05, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x4e, 0x44, 0x45,
	0x44, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x5f, 0x4d, 0x45, 0x52, 0x47, 0x45,
	0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x12, 0x28, 0x0a, 0x24, 0x4d, 0x41, 0x50,
	0x50, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45,
	0x4e, 0x54, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x4f, 0x55, 0x54, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45,
	0x53, 0x10, 0x07, 0x12, 0x2d, 0x0a, 0x29, 0x4d, 0x41, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x44, 0x45,
	0x56, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x54, 0x5f, 0x57, 0x49, 0x54,
	0x48, 0x5f, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x08, 0x22, 0x94, 0x01, 0x0a, 0x0a, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x5f, 0x54,
	0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x49, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x52, 0x41,
	0x49, 0x44, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x03,
	0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x48, 0x49, 0x4e, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10,
	0x04, 0x12, 0x12, 0x0a, 0x0e, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x54, 0x41, 0x52,
	0x47, 0x45, 0x54, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c,
	0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x06, 0x22, 0x6e, 0x0a, 0x06, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44,
	0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x5f, 0x4e, 0x45, 0x45, 0x44, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x49, 0x53, 0x4d, 0x41, 0x54, 0x43, 0x48, 0x45, 0x53,
	0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x57, 0x52, 0x49, 0x54,
	0x45, 0x4d, 0x4f, 0x53, 0x54, 0x4c, 0x59, 0x10, 0x05, 0x22, 0x95, 0x01, 0x0a, 0x0b, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x72, 0x65, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x76, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x70, 0x76, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x32, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x3d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x56, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2e, 0x0a, 0x07, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x63, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x52, 0x07, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x69, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x74, 0x72, 0x69, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x36, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x48, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c,
	0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x36, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4e, 0x0a, 0x0e, 0x43, 0x6c, 0x6f, 0x6e, 0x65,
	0x4c, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x6e, 0x65,
	0x4c, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x0f,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x47, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x46, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x47, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x37,
	0x0a, 0x0d, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x62, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x47, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x36, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x47, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x25, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56, 0x47, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x0d, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x56, 0x47, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x5c, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x4c, 0x56, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x22, 0x36, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x4c, 0x56, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x5f, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x54, 0x61, 0x67, 0x4c, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x39, 0x0a, 0x10, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x4c, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x26, 0x0a, 0x10, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x50, 0x61, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x37, 0x0a, 0x0e,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x4d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x02, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x64, 0x65, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x6c, 0x69, 0x67, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x6c, 0x69,
	0x67, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x76, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x76, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x72, 0x5f, 0x64, 0x65, 0x76, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72, 0x44, 0x65, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x45, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x0a,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x22, 0x58, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x3d, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x37, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x22,
	0x3d, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x32, 0xc7,
	0x06, 0x0a, 0x03, 0x4c, 0x56, 0x4d, 0x12, 0x34, 0x0a, 0x06, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x56,
	0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x56, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x08,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x56, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c,
	0x56, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x08, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x4c, 0x56, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4c, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4c, 0x56, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x07, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x4c, 0x56, 0x12,
	0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x6f, 0x6e, 0x65, 0x4c, 0x56, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x6c, 0x6f, 0x6e, 0x65, 0x4c, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a,
	0x08, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x4c, 0x56, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x4c, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67,
	0x4c, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x4c, 0x56, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x61, 0x67, 0x4c, 0x56, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x54, 0x61, 0x67, 0x4c, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x34,
	0x0a, 0x06, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x47, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x47, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x47, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x47,
	0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x47, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x47, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x08, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x56, 0x47, 0x12, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x47, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x56, 0x47, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x09,
	0x43, 0x6c, 0x65, 0x61, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x6e,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lvm_proto_rawDescOnce sync.Once
	file_lvm_proto_rawDescData = file_lvm_proto_rawDesc
)

func file_lvm_proto_rawDescGZIP() []byte {
	file_lvm_proto_rawDescOnce.Do(func() {
		file_lvm_proto_rawDescData = protoimpl.X.CompressGZIP(file_lvm_proto_rawDescData)
	})
	return file_lvm_proto_rawDescData
}

var file_lvm_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_lvm_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_lvm_proto_goTypes = []interface{}{
	(LogicalVolume_Attributes_Type)(0),        // 0: proto.LogicalVolume.Attributes.Type
	(LogicalVolume_Attributes_Permissions)(0), // 1: proto.LogicalVolume.Attributes.Permissions
	(LogicalVolume_Attributes_Allocation)(0),  // 2: proto.LogicalVolume.Attributes.Allocation
	(LogicalVolume_Attributes_State)(0),       // 3: proto.LogicalVolume.Attributes.State
	(LogicalVolume_Attributes_TargetType)(0),  // 4: proto.LogicalVolume.Attributes.TargetType
	(LogicalVolume_Attributes_Health)(0),      // 5: proto.LogicalVolume.Attributes.Health
	(*LogicalVolume)(nil),                     // 6: proto.LogicalVolume
	(*VolumeGroup)(nil),                       // 7: proto.VolumeGroup
	(*ListLVRequest)(nil),                     // 8: proto.ListLVRequest
	(*ListLVReply)(nil),                       // 9: proto.ListLVReply
	(*CreateLVRequest)(nil),                   // 10: proto.CreateLVRequest
	(*CreateLVReply)(nil),                     // 11: proto.CreateLVReply
	(*RemoveLVRequest)(nil),                   // 12: proto.RemoveLVRequest
	(*RemoveLVReply)(nil),                     // 13: proto.RemoveLVReply
	(*CloneLVRequest)(nil),                    // 14: proto.CloneLVRequest
	(*CloneLVReply)(nil),                      // 15: proto.CloneLVReply
	(*ListVGRequest)(nil),                     // 16: proto.ListVGRequest
	(*ListVGReply)(nil),                       // 17: proto.ListVGReply
	(*CreateVGRequest)(nil),                   // 18: proto.CreateVGRequest
	(*CreateVGReply)(nil),                     // 19: proto.CreateVGReply
	(*RemoveVGRequest)(nil),                   // 20: proto.RemoveVGRequest
	(*RemoveVGReply)(nil),                     // 21: proto.RemoveVGReply
	(*AddTagLVRequest)(nil),                   // 22: proto.AddTagLVRequest
	(*AddTagLVReply)(nil),                     // 23: proto.AddTagLVReply
	(*RemoveTagLVRequest)(nil),                // 24: proto.RemoveTagLVRequest
	(*RemoveTagLVReply)(nil),                  // 25: proto.RemoveTagLVReply
	(*CleanPathRequest)(nil),                  // 26: proto.CleanPathRequest
	(*CleanPathReply)(nil),                    // 27: proto.CleanPathReply
	(*ListNamespaceRequest)(nil),              // 28: proto.ListNamespaceRequest
	(*NameSpace)(nil),                         // 29: proto.NameSpace
	(*ListNamespaceReply)(nil),                // 30: proto.ListNamespaceReply
	(*CreateNamespaceRequest)(nil),            // 31: proto.CreateNamespaceRequest
	(*CreateNamespaceReply)(nil),              // 32: proto.CreateNamespaceReply
	(*RemoveNamespaceRequest)(nil),            // 33: proto.RemoveNamespaceRequest
	(*RemoveNamespaceReply)(nil),              // 34: proto.RemoveNamespaceReply
	(*LogicalVolume_Attributes)(nil),          // 35: proto.LogicalVolume.Attributes
}
var file_lvm_proto_depIdxs = []int32{
	35, // 0: proto.LogicalVolume.attributes:type_name -> proto.LogicalVolume.Attributes
	6,  // 1: proto.ListLVReply.volumes:type_name -> proto.LogicalVolume
	7,  // 2: proto.ListVGReply.volume_groups:type_name -> proto.VolumeGroup
	29, // 3: proto.ListNamespaceReply.name_space:type_name -> proto.NameSpace
	0,  // 4: proto.LogicalVolume.Attributes.type:type_name -> proto.LogicalVolume.Attributes.Type
	1,  // 5: proto.LogicalVolume.Attributes.permissions:type_name -> proto.LogicalVolume.Attributes.Permissions
	2,  // 6: proto.LogicalVolume.Attributes.allocation:type_name -> proto.LogicalVolume.Attributes.Allocation
	3,  // 7: proto.LogicalVolume.Attributes.state:type_name -> proto.LogicalVolume.Attributes.State
	4,  // 8: proto.LogicalVolume.Attributes.target_type:type_name -> proto.LogicalVolume.Attributes.TargetType
	5,  // 9: proto.LogicalVolume.Attributes.health:type_name -> proto.LogicalVolume.Attributes.Health
	8,  // 10: proto.LVM.ListLV:input_type -> proto.ListLVRequest
	10, // 11: proto.LVM.CreateLV:input_type -> proto.CreateLVRequest
	12, // 12: proto.LVM.RemoveLV:input_type -> proto.RemoveLVRequest
	14, // 13: proto.LVM.CloneLV:input_type -> proto.CloneLVRequest
	22, // 14: proto.LVM.AddTagLV:input_type -> proto.AddTagLVRequest
	24, // 15: proto.LVM.RemoveTagLV:input_type -> proto.RemoveTagLVRequest
	16, // 16: proto.LVM.ListVG:input_type -> proto.ListVGRequest
	18, // 17: proto.LVM.CreateVG:input_type -> proto.CreateVGRequest
	18, // 18: proto.LVM.RemoveVG:input_type -> proto.CreateVGRequest
	26, // 19: proto.LVM.CleanPath:input_type -> proto.CleanPathRequest
	28, // 20: proto.LVM.ListNamespace:input_type -> proto.ListNamespaceRequest
	31, // 21: proto.LVM.CreateNamespace:input_type -> proto.CreateNamespaceRequest
	33, // 22: proto.LVM.RemoveNamespace:input_type -> proto.RemoveNamespaceRequest
	9,  // 23: proto.LVM.ListLV:output_type -> proto.ListLVReply
	11, // 24: proto.LVM.CreateLV:output_type -> proto.CreateLVReply
	13, // 25: proto.LVM.RemoveLV:output_type -> proto.RemoveLVReply
	15, // 26: proto.LVM.CloneLV:output_type -> proto.CloneLVReply
	23, // 27: proto.LVM.AddTagLV:output_type -> proto.AddTagLVReply
	25, // 28: proto.LVM.RemoveTagLV:output_type -> proto.RemoveTagLVReply
	17, // 29: proto.LVM.ListVG:output_type -> proto.ListVGReply
	19, // 30: proto.LVM.CreateVG:output_type -> proto.CreateVGReply
	21, // 31: proto.LVM.RemoveVG:output_type -> proto.RemoveVGReply
	27, // 32: proto.LVM.CleanPath:output_type -> proto.CleanPathReply
	30, // 33: proto.LVM.ListNamespace:output_type -> proto.ListNamespaceReply
	32, // 34: proto.LVM.CreateNamespace:output_type -> proto.CreateNamespaceReply
	34, // 35: proto.LVM.RemoveNamespace:output_type -> proto.RemoveNamespaceReply
	23, // [23:36] is the sub-list for method output_type
	10, // [10:23] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_lvm_proto_init() }
func file_lvm_proto_init() {
	if File_lvm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lvm_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogicalVolume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLVReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLVReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveLVReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneLVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloneLVReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVGRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVGReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVGRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVGReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveVGRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveVGReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTagLVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTagLVReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTagLVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTagLVReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CleanPathReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameSpace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNamespaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNamespaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNamespaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNamespaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lvm_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogicalVolume_Attributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lvm_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lvm_proto_goTypes,
		DependencyIndexes: file_lvm_proto_depIdxs,
		EnumInfos:         file_lvm_proto_enumTypes,
		MessageInfos:      file_lvm_proto_msgTypes,
	}.Build()
	File_lvm_proto = out.File
	file_lvm_proto_rawDesc = nil
	file_lvm_proto_goTypes = nil
	file_lvm_proto_depIdxs = nil
}
